# Upstreamブランチからコンフリクトマーカーをつけたままマージしてプルリクエストを作成

name: Create branch, Merge upstream, Pull request

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  # Actions タブから手動でこのワークフローを実行することを許可する
  workflow_dispatch:
  
env:
  # 日付も入れたい
  BRANCH: auto_merge
  UPSTREAM: https://github.com/snowatfeet/test_for_actions.git
  REPO: hzuika/test_for_actions_fork
  USER_EMAIL: 39191601+hzuika@users.noreply.github.com
  USER_NAME: hzuika
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # checkoutしないと，ワークフロー時の環境にこのリポジトリが存在しないことになる
      - uses: actions/checkout@v3
      
      # (マージ)コミットするときに必要なgit configの情報
      - name: Set git config for merge commit
        run: |
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"
          
      - name: Create and Checkout new branch
        run: |
          git checkout -b "$BRANCH"
          
      - name: Set upstream repo
        run: |
          git remote add upstream ${UPSTREAM}
          
      # デフォルトでfetch-depthが1(shallow clone)なので，mergeするときに，fatal: refusing to merge unrelated historiesが出るのを避ける
      - name: Fetch upstream repo
        run: |
          git fetch upstream --unshallow
          
      # upstreamをmergeするが，コンフリクト(エラー)が出てもワークフローを終了させない．
      # マージしたときの出力(コンフリクトのエラーメッセージを変数に格納する
      - name: Merge upstream repo
        id: merge
        continue-on-error: true
        run: |
          #改行文字はエスケープしないと一行しか入れることができない
          #echo "::set-output name=MERGE_OUTPUT::$(git merge upstream/main)"
          #複数行の文字列を格納するために環境変数を使う．
          git merge upstream/main >> merge_output.txt
      
      - run: cat merge_output.txt

      - run: echo 'MERGE_OUTPUT=$(cat merge_output.txt)' >> $GITHUB_ENV
          
      - name: Commit merge
        run: |
          git commit -am "Merge from upstream"
          
      - name: Push this branch to origin
        run: |
          git push origin "$BRANCH"
          
      # upstream を設定すると，プルリクエストの対象がデフォルトでupstreamになるため，`--repo`で明示的に指定する．
      # gh コマンドでプルリクエストを作成するためには，GH_TOKENが必要
      # マージしたときの出力をプルリクエストの本文に使う
      - name: Create Pull Request
        run: |
          gh pr create --head "$BRANCH" --base "main" --repo "$REPO" --title "Auto merge" --body "${{ env.MERGE_OUTPUT }}"
          #gh pr create --head "$BRANCH" --base "main" --repo "$REPO" --title "Auto merge" --body "${{ steps.merge.outputs.MERGE_OUTPUT }}"
